

//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------


namespace BiblioAstur
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class BibliotecaEntities : DbContext
{
    public BibliotecaEntities()
        : base("name=BibliotecaEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }



    public virtual ObjectResult<SeleccionarUsuariosDTO> up_Usuarios_SEL_SeleccionarUsuarios(string dni, Nullable<byte> admin, string nombre, string apellidos)
    {

        var dniParameter = dni != null ?
            new ObjectParameter("dni", dni) :
            new ObjectParameter("dni", typeof(string));


        var adminParameter = admin.HasValue ?
            new ObjectParameter("admin", admin) :
            new ObjectParameter("admin", typeof(byte));


        var nombreParameter = nombre != null ?
            new ObjectParameter("nombre", nombre) :
            new ObjectParameter("nombre", typeof(string));


        var apellidosParameter = apellidos != null ?
            new ObjectParameter("apellidos", apellidos) :
            new ObjectParameter("apellidos", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SeleccionarUsuariosDTO>("up_Usuarios_SEL_SeleccionarUsuarios", dniParameter, adminParameter, nombreParameter, apellidosParameter);
    }


    public virtual ObjectResult<Nullable<int>> up_Usuarios_INS_InsertarUsuario(string dni, string nombre, string apellidos, string direccion, string telefono, string email, string usuario, string password, Nullable<bool> admin, ObjectParameter estado)
    {

        var dniParameter = dni != null ?
            new ObjectParameter("dni", dni) :
            new ObjectParameter("dni", typeof(string));


        var nombreParameter = nombre != null ?
            new ObjectParameter("nombre", nombre) :
            new ObjectParameter("nombre", typeof(string));


        var apellidosParameter = apellidos != null ?
            new ObjectParameter("apellidos", apellidos) :
            new ObjectParameter("apellidos", typeof(string));


        var direccionParameter = direccion != null ?
            new ObjectParameter("direccion", direccion) :
            new ObjectParameter("direccion", typeof(string));


        var telefonoParameter = telefono != null ?
            new ObjectParameter("telefono", telefono) :
            new ObjectParameter("telefono", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("email", email) :
            new ObjectParameter("email", typeof(string));


        var usuarioParameter = usuario != null ?
            new ObjectParameter("usuario", usuario) :
            new ObjectParameter("usuario", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("password", password) :
            new ObjectParameter("password", typeof(string));


        var adminParameter = admin.HasValue ?
            new ObjectParameter("admin", admin) :
            new ObjectParameter("admin", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("up_Usuarios_INS_InsertarUsuario", dniParameter, nombreParameter, apellidosParameter, direccionParameter, telefonoParameter, emailParameter, usuarioParameter, passwordParameter, adminParameter, estado);
    }


    public virtual ObjectResult<Nullable<int>> up_Usuarios_UPD_ActualizarUsuario(string dni, string nombre, string apellidos, string direccion, string telefono, string email, string usuario, string password, Nullable<bool> admin, ObjectParameter estado)
    {

        var dniParameter = dni != null ?
            new ObjectParameter("dni", dni) :
            new ObjectParameter("dni", typeof(string));


        var nombreParameter = nombre != null ?
            new ObjectParameter("nombre", nombre) :
            new ObjectParameter("nombre", typeof(string));


        var apellidosParameter = apellidos != null ?
            new ObjectParameter("apellidos", apellidos) :
            new ObjectParameter("apellidos", typeof(string));


        var direccionParameter = direccion != null ?
            new ObjectParameter("direccion", direccion) :
            new ObjectParameter("direccion", typeof(string));


        var telefonoParameter = telefono != null ?
            new ObjectParameter("telefono", telefono) :
            new ObjectParameter("telefono", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("email", email) :
            new ObjectParameter("email", typeof(string));


        var usuarioParameter = usuario != null ?
            new ObjectParameter("usuario", usuario) :
            new ObjectParameter("usuario", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("password", password) :
            new ObjectParameter("password", typeof(string));


        var adminParameter = admin.HasValue ?
            new ObjectParameter("admin", admin) :
            new ObjectParameter("admin", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("up_Usuarios_UPD_ActualizarUsuario", dniParameter, nombreParameter, apellidosParameter, direccionParameter, telefonoParameter, emailParameter, usuarioParameter, passwordParameter, adminParameter, estado);
    }


    public virtual ObjectResult<Nullable<int>> up_Usuarios_DEL_BorrarUsuario(string dni, ObjectParameter estado)
    {

        var dniParameter = dni != null ?
            new ObjectParameter("dni", dni) :
            new ObjectParameter("dni", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("up_Usuarios_DEL_BorrarUsuario", dniParameter, estado);
    }

}

}

